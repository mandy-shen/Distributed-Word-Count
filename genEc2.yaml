---
AWSTemplateFormatVersion: '2010-09-09'
Description: ''
Parameters:
  KeyName:
    Description: Name of an existing EC2 KeyPair to enable SSH access to the instance
    Type: AWS::EC2::KeyPair::KeyName
    ConstraintDescription: Can contain only ASCII characters.
Mappings:
  AWSRegionArch2AMI:
    us-west-2:
      HVM64: ami-05b622b5fa0269787
Resources:
  WebServerInstance:
    Type: AWS::EC2::Instance
    Properties:
      IamInstanceProfile: !Ref RootInstanceProfile
      ImageId:
        Fn::FindInMap:
          - AWSRegionArch2AMI
          - Ref: AWS::Region
          - HVM64
      InstanceType: t2.micro
      SecurityGroups:
        - Ref: WebServerSecurityGroup
      KeyName:
        Ref: KeyName
      UserData:
        Fn::Base64:
          !Sub |
          #!/bin/bash -ex
          whoami >> /tmp/whoami.txt
          yum update -y
          amazon-linux-extras install docker
          service docker start
          usermod -a -G docker ec2-user
          curl -L https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s)-$(uname -m) -o /usr/local/bin/docker-compose
          chmod +x /usr/local/bin/docker-compose
          aws s3 cp s3://ec2-bucket-p/wordcount.zip /tmp
          unzip -d . /tmp/wordcount.zip
          cd ./wordcount
          docker-compose up -d
  RootInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: /
      Roles:
        - !Ref S3WritableRole
  S3WritableRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: ec2.amazonaws.com
            Action: sts:AssumeRole
      Path: /
  RolePolicies:
    Type: AWS::IAM::Policy
    DependsOn:
      - WebServerInstance
    Properties:
      PolicyName: EC2toS3Policy
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action: 's3:*'
            Resource: '*'
      Roles:
        - !Ref S3WritableRole
  WebServerSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Enable ports
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '80'
          ToPort: '80'
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: '22'
          ToPort: '22'
          CidrIp: 0.0.0.0/0
Outputs:
  WebsiteURL:
    Description: URL
    Value:
      Fn::Join:
        - ''
        - - http://
          - Fn::GetAtt:
              - PublicDnsName
              - "/app?file=https://www.gutenberg.org/cache/epub/19033/pg19033.txt"
  PublicIP:
    Description: Public IP address
    Value: !GetAtt [ WebServerInstance, PublicIp ]